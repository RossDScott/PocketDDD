@page "/"

@using PocketDDD.BlazorClient.Features.HeaderBar.Store;
@using PocketDDD.BlazorClient.Features.Login.Components
@using PocketDDD.BlazorClient.Features.Sync.Store
@using PocketDDD.BlazorClient.Services
@using PocketDDD.BlazorClient.Features.Home.Store

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@inject IState<HomeState> State
@inject IDispatcher Dispatcher
@inject IDialogService Dialog
@inject LocalStorageService LocalStorage

@WhenLoadingAndNotFailedShowAlert()
@WhenLoadingFailedShowCard()

<EventData></EventData>
<MudFab 
    Color="Color.Primary" 
    Size="Size.Large"
        Label="@State.Value.EventScore.ToString()"
        Style="position:fixed; right:10px; bottom:10px" />

@code {
    RenderFragment? WhenLoadingAndNotFailedShowAlert() => State.Value.Loading && !State.Value.FailedToLoad
        ? @<MudAlert Severity="Severity.Info">loading...</MudAlert>
        : null;

    RenderFragment? WhenLoadingFailedShowCard() => State.Value.Loading && State.Value.FailedToLoad
        ? @<MudCard>
            <MudCardContent>
                <MudText><h5>Failed to load data</h5></MudText>
            </MudCardContent>
            <MudCardActions>
                <MudButton Variant="Variant.Text" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Refresh">Retry</MudButton>
            </MudCardActions>
          </MudCard>
        : null;
}

@code {
    protected override void OnInitialized()
    {
        Dispatcher.Dispatch(new SetHeaderBarTitleAction("DDDSW 2023"));
        Dispatcher.Dispatch(new CheckUserAction());

        //var user = await LocalStorage.GetCurrentUser();

        //if(user is null)
        //    Dialog.Show<Login>("", new DialogOptions { FullScreen = true });

        //var state = this.State.Value;
        if(State.Value.Loading)
            Dispatcher.Dispatch(new LoadDataAction());

        Dispatcher.Dispatch(new SyncAction());

        base.OnInitialized();
    }

    //protected override async Task OnInitializedAsync()
    //{
    //    Dispatcher.Dispatch(new CheckUserAction());

    //    //var user = await LocalStorage.GetCurrentUser();

    //    //if(user is null)
    //    //    Dialog.Show<Login>("", new DialogOptions { FullScreen = true });

    //    //var state = this.State.Value;
    //    Dispatcher.Dispatch(new LoadDataAction());
    //    Dispatcher.Dispatch(new SyncAction());
    //}

    void HandleShowEventFeedback()
    {
        
    }
}
