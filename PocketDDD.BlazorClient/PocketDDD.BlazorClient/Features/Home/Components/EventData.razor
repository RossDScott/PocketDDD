@using PocketDDD.BlazorClient.Features.Home.Store;
@using System.Text.Json;
@using PocketDDD.BlazorClient.Features.Session.Store;
@inherits FluxorComponent

@inject IState<HomeState> State
@inject IDispatcher Dispatcher

<MudList Clickable="true">
    @foreach(var timeSlot in State.Value.EventMetaData)
    {
        <MudListSubheader Class="pb-0 pl-1 border-b border-solid mud-border-primary">
            <h2>@timeSlot.From.ToString("h:mm") @timeSlot.From.ToString("tt").ToLowerInvariant()</h2>
        </MudListSubheader>
        @if(timeSlot.Info is not null)
        {
            <MudListItem Class="ml-1">
                <h2>@timeSlot.Info</h2>
            </MudListItem>
        }
        @foreach(var sessionItem in timeSlot.Sessions.Select((session, index) => (session, index)))
        {
            <MudListItem 
                Class="ml-1"
                Icon="@sessionItem.session.BookmarkIconIfBookmarked"
                OnClick="() => ViewSession(sessionItem.session.Id)">
                <h2>@sessionItem.session.Title</h2>
                <h3>@sessionItem.session.SpeakerName</h3>
                <h3>@sessionItem.session.TrackName (@sessionItem.session.RoomName)</h3>
            </MudListItem>

            @if (sessionItem.index != timeSlot.Sessions.Count -1)
            {
                <MudDivider />
            }
        }
    }

</MudList>

@*@JsonSerializer.Serialize(State.Value)*@

@code {
    void ViewSession(int sessionId) => Dispatcher.Dispatch(new ViewSessionAction(sessionId));
}
