@page "/session/{id:int}"

@inherits Fluxor.Blazor.Web.Components.FluxorComponent

@using PocketDDD.BlazorClient.Features.HeaderBar.Store;
@using PocketDDD.BlazorClient.Features.Session.Store
@using PocketDDD.BlazorClient.Features.SessionFeedback.Store;

@inject IState<SessionState> State
@inject IDispatcher Dispatcher
@inject NavigationManager Navigation
@inject IDialogService Dialog

@if (State.Value.Session is not null)
{
    <MudText Typo="Typo.h5" Class="ma-2">
        @State.Value.Session.From.ToString("h:mm")
        @State.Value.Session.From.ToString("tt").ToLowerInvariant(), 
        @State.Value.Session.TrackName (@State.Value.Session.RoomName)
    </MudText>

    <MudCard Class="ma-3">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h5">@State.Value.Session.Title</MudText>
            </CardHeaderContent>
        </MudCardHeader>
        <MudCardContent>
            <MudText>@State.Value.Session.Detail</MudText>
        </MudCardContent>
    </MudCard>

    <MudFab 
        Color="@State.Value.Session.BookmarkColor"
        Size="Size.Large"
        StartIcon="@State.Value.Session.BookmarkIcon"
        Style="position:fixed; right:10px; bottom:10px"
        OnClick="HandleToggleSessionBookmarked" />
}

@code {
    [Parameter]
    public int Id { get; set; }

    protected override void OnInitialized()
    {
        if (State.Value.Session?.Id != Id)
            Dispatcher.Dispatch(new ViewSessionAction(Id));

        SubscribeToAction<NavigateBackAction>(_ => HandleNavigateHome());
        SubscribeToAction<ViewFeedbackAction>(_ => HandleShowSessionFeedback());

        base.OnInitialized();
    }

    void HandleNavigateHome() => Navigation.NavigateTo("/", false, true);

    void HandleToggleSessionBookmarked()
    {
        var session = State.Value.Session;
        if (session is null)
            return;

        Dispatcher.Dispatch(new ToggleBookmarkedAction(session.Id, !session.IsBookmarked));
    }

    void HandleShowSessionFeedback()
    {
        Dialog.Show<Features.SessionFeedback.Components.SessionFeedback>(
            "", 
            new DialogParameters { ["Id"] = Id },
            new DialogOptions { FullScreen = true });
    }
}
